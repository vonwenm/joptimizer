<project name="JOptimizer" default="dist" basedir=".">
<!--
/*
 * Copyright 2011-2013 JOptimizer
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
 -->

<!-- ===================== Property Definitions =========================== -->
  <property file="build.properties"/>
  <property name="app.name"      value="joptimizer"/>
  <property name="app.version"   value="3.2.0"/>
  <property name="src.home"      value="${basedir}/src"/>
  <property name="build.home"    value="${basedir}/target"/>
  <property name="dist.home"     value="${basedir}/target"/>
  <property name="docs.home"     value="${basedir}/target/docs"/>
  <property name="lib.home"      value="${src.home}/etc/lib"/><!-- configure this -->
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>


<!-- ==================== Compilation Classpath =========================== -->
  <path id="compile.classpath">
    <fileset dir="${lib.home}">
      <include name="*.jar"/>
    </fileset>
    <!--pathelement path="${build.home}/classes"/-->
  </path>


<!-- ==================== Clean Target ==================================== -->
  <target name="clean" description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
  </target>


<!-- ==================== Compile Target ================================== -->
  <target name="compile" depends="prepare" description="Compile Java sources">

    <!-- Compile main Java classes as necessary -->
    <javac srcdir="${src.home}/main/java"
          destdir="${build.home}/classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac>
    <!-- Compile test Java classes as necessary -->
    <!--javac srcdir="${src.home}/test/java"
          destdir="${build.home}/test-classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac-->

    <!-- Copy main application resources -->
    <copy  todir="${build.home}/classes">
      <fileset dir="${src.home}/main/resources" excludes="**/*.java"/>
    </copy>
    <!-- Copy test application resources -->
    <!--copy  todir="${build.home}/test-classes">
      <fileset dir="${src.home}/test/resources" excludes="**/*.java"/>
    </copy-->

  </target>



<!-- ==================== Dist Target ===================================== -->
  <target name="dist" depends="touch,compile,-dependencies-dist" description="Create binary distribution">

    <!-- Create application JAR file -->
    <jar jarfile="${dist.home}/${app.name}-${app.version}.jar"
         basedir="${build.home}/classes">
      <manifest>
		    <section name="common">
		      <attribute name="Specification-Title"    value="JOptimizer"/>
		      <attribute name="Specification-Version"  value="${app.version}"/>
		      <attribute name="Specification-Vendor"   value="JOptimizer"/>
		      <attribute name="Implementation-Title"   value="JOptimizer"/>
		      <attribute name="Implementation-Version" value="${app.version}"/> 
		      <attribute name="Implementation-Vendor"  value="JOptimizer"/>
		    </section>
		  </manifest>
    </jar>

		<!-- Create source JAR file -->
    <zip destfile="${dist.home}/${app.name}-${app.version}-sources.jar">
		  <zipfileset dir="${basedir}" includes="*.xml,*.txt"/>
		  <zipfileset dir="${src.home}/main/java" prefix="src/main/java"/>
		  <zipfileset dir="${src.home}/main/resources" prefix="src/main/resources"/>
		  <zipfileset dir="${src.home}/test/java" prefix="src/test/java"/>
		  <zipfileset dir="${src.home}/test/resources" prefix="src/test/resources"/>
		</zip>

  </target>

	<target name="-dependencies-dist" depends="prepare" if="lib.present">
		<!-- Create dependencies ZIP file -->
    <zip destfile="${dist.home}/${app.name}-${app.version}-dependencies.zip">
		  <zipfileset dir="${lib.home}" includes="*.jar,*.zip,*.pom,*.cmd"/>
		</zip>
  </target>

<!-- ==================== Javadoc Target ================================== -->
  <target name="javadoc" depends="compile" description="Create Javadoc API documentation">

    <mkdir          dir="${dist.home}/docs/api"/>
    <javadoc sourcepath="${src.home}/main/java"
                destdir="${dist.home}/docs/api"
           packagenames="*">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>

<!-- ==================== Prepare Target ================================== -->
  <target name="prepare" depends="clean">
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/classes"/>
    <mkdir  dir="${build.home}/test-classes"/>
    <available file="${lib.home}" property="lib.present"/>
  </target>
  
  <!-- ==================== Touch Target ================================== -->
  <target name="touch">
    <touch>
    	<fileset dir="${src.home}/main/java" includes="**/*.java"/>
    	<fileset dir="${src.home}/test/java" includes="**/*.java"/>
  	</touch>
  </target>

</project>